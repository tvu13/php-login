{"ts":1380896655081,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n\n/**\n * handles the user login/logout/session\n * @author Panique <panique@web.de>\n */\nclass Login\n{\n    // database connection\n    private $db_connection = null;\n    private $user_name = \"\";\n    private $user_email = \"\";\n    private $user_password_hash = \"\";\n    private $user_is_logged_in = false;\n\n    // collection of error messages\n    public $errors = array();\n    // collection of success / neutral messages\n    public $messages = array();\n\n    /**\n     * the function \"__construct()\" automatically starts whenever an object of this class is created,\n     * you know, when you do \"$login = new Login();\"\n     */\n    public function __construct()\n    {\n        // create/read session\n        session_start();\n\n        // check the possible login actions:\n        // 1. logout (happen when user clicks logout button)\n        // 2. login via session data (happens each time user opens a page on your php project AFTER he has sucessfully logged in via the login form)\n        // 3. login via post data, which means simply logging in via the login form. after the user has submit his login/password successfully, his\n        //    logged-in-status is written into his session data on the server. this is the typical behaviour of common login scripts.\n\n        // if user tried to log out\n        if (isset($_GET[\"logout\"])) {\n\n            $this->doLogout();\n        }\n        // if user has an active session on the server\n        elseif (!empty($_SESSION['user_name']) && ($_SESSION['user_logged_in'] == 1)) {\n\n            $this->loginWithSessionData();\n        }\n        // if user just submitted a login form\n        elseif (isset($_POST[\"login\"])) {\n\n            $this->loginWithPostData();\n        }\n    }\n\n    /**\n     * log in with session data\n     */\n    private function loginWithSessionData()\n    {\n        // set logged in status to true, because we just checked for this:\n        // !empty($_SESSION['user_name']) && ($_SESSION['user_logged_in'] == 1)\n        // when we called this method (in the constructor)\n        $this->user_is_logged_in = true;\n    }\n\n    /**\n     * log in with post data\n     */\n    private function loginWithPostData()\n    {\n        // if POST data (from login form) contains non-empty user_name and non-empty user_password\n        if (!empty($_POST['user_name']) && !empty($_POST['user_password'])) {\n\n            // create a database connection, using the constants from config/db.php (which we loaded in index.php)\n            $this->db_connection = new mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);\n\n            // if no connection errors (= working database connection)\n            if (!$this->db_connection->connect_errno) {\n\n                // escape the POST stuff\n                $this->user_name = $this->db_connection->real_escape_string($_POST['user_name']);\n                // database query, getting all the info of the selected user\n                $checklogin = $this->db_connection->query(\"SELECT user_name, user_email, user_password_hash FROM users WHERE user_name = '\" . $this->user_name . \"';\");\n\n                // if this user exists\n                if ($checklogin->num_rows == 1) {\n\n                    // get result row (as an object)\n                    $result_row = $checklogin->fetch_object();\n\n                    // using PHP 5.5's password_verify() function to check if the provided passwords fits to the hash of that user's password\n                    if (password_verify($_POST['user_password'], $result_row->user_password_hash)) {\n\n                        // write user data into PHP SESSION [a file on your server]\n                        $_SESSION['user_name'] = $result_row->user_name;\n                        $_SESSION['user_email'] = $result_row->user_email;\n                        $_SESSION['user_logged_in'] = 1;\n\n                        // set the login status to true\n                        $this->user_is_logged_in = true;\n\n                    } else {\n\n                        $this->errors[] = \"Wrong password. Try again.\";\n                    }\n\n                } else {\n\n                    $this->errors[] = \"This user does not exist.\";\n                }\n\n            } else {\n\n                $this->errors[] = \"Database connection problem.\";\n            }\n\n        } elseif (empty($_POST['user_name'])) {\n\n            $this->errors[] = \"Username field was empty.\";\n\n        } elseif (empty($_POST['user_password'])) {\n\n            $this->errors[] = \"Password field was empty.\";\n        }\n    }\n\n    /**\n     * perform the logout\n     */\n    public function doLogout()\n    {\n        $_SESSION = array();\n        session_destroy();\n        $this->user_is_logged_in = false;\n        $this->messages[] = \"You have been logged out.\";\n\n    }\n\n    /**\n     * simply return the current state of the user's login\n     * @return boolean user's login status\n     */\n    public function isUserLoggedIn()\n    {\n        return $this->user_is_logged_in;\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":4946}]],"length":4946}
